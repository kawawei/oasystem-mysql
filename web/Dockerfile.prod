# 依賴階段 Dependencies stage
FROM node:18-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production \
    && npm cache clean --force

# 構建階段 Build stage
FROM node:18-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
# 使用環境變量設置構建模式
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
RUN npm run build

# 生產階段 Production stage
FROM nginx:stable-alpine AS production
# 從構建階段複製構建產物
COPY --from=builder /app/dist /usr/share/nginx/html
# 複製 nginx 配置
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 創建上傳目錄
RUN mkdir -p /usr/share/nginx/html/uploads \
    && chown -R nginx:nginx /usr/share/nginx/html

# 使用非 root 用戶
USER nginx

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"] 