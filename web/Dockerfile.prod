# 依賴階段 - Dependencies stage
FROM node:18-alpine AS deps
WORKDIR /app
COPY package*.json ./
# 先安裝生產依賴 - Install production dependencies first
RUN npm ci --only=production \
    && npm cache clean --force

# 構建階段 - Build stage
FROM node:18-alpine AS builder
WORKDIR /app
# 複製生產依賴 - Copy production dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY package*.json ./
# 安裝開發依賴 - Install development dependencies
RUN npm install --only=development
# 複製源代碼 - Copy source code
COPY . .
# 設置環境變量 - Set environment variables
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
# 執行構建 - Run build
RUN npm run build

# 生產階段 - Production stage
FROM nginx:stable-alpine AS production
# 創建必要的目錄並設置權限 - Create necessary directories and set permissions
RUN mkdir -p /var/cache/nginx \
    && mkdir -p /var/cache/nginx/client_temp \
    && mkdir -p /var/cache/nginx/proxy_temp \
    && mkdir -p /var/cache/nginx/fastcgi_temp \
    && mkdir -p /var/cache/nginx/uwsgi_temp \
    && mkdir -p /var/cache/nginx/scgi_temp \
    && mkdir -p /usr/share/nginx/html/uploads \
    && chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /usr/share/nginx/html \
    && chmod -R 755 /var/cache/nginx \
    && chmod -R 755 /usr/share/nginx/html

# 從構建階段複製構建產物 - Copy build artifacts
COPY --from=builder /app/dist /usr/share/nginx/html
# 複製 nginx 配置 - Copy nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 使用非 root 用戶 - Use non-root user
USER nginx

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"] 