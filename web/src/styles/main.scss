// Reset
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// Variables
:root {
  // Colors
  --color-primary: #0071e3;
  --color-primary-dark: #0077ed;
  --color-background: #ffffff;
  --color-text: #1d1d1f;
  --color-text-secondary: #86868b;
  --color-border: #d2d2d7;
  --color-error: #ff3b30;
  --color-success: #34c759;
  
  // Typography
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  
  // Spacing
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  
  // Border radius
  --radius-sm: 8px;
  --radius-md: 12px;
  --radius-lg: 16px;
  
  // Shadows
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.12);
  --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.14);
  
  // Breakpoints
  --breakpoint-sm: 640px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-2xl: 1536px;
}

// Base styles
html {
  font-size: 16px;
  -webkit-text-size-adjust: 100%;
}

body {
  font-family: var(--font-family);
  line-height: 1.5;
  color: var(--color-text);
  background-color: var(--color-background);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Typography
h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  line-height: 1.2;
}

h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.25rem; }
h6 { font-size: 1rem; }

// Links
a {
  color: var(--color-primary);
  text-decoration: none;
  transition: color 0.2s ease;
  
  &:hover {
    color: var(--color-primary-dark);
  }
}

// Buttons
button {
  font-family: var(--font-family);
  border: none;
  outline: none;
  cursor: pointer;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  font-weight: 500;
  transition: all 0.2s ease;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Form elements
input, textarea {
  font-family: var(--font-family);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  padding: var(--spacing-sm);
  outline: none;
  width: 100%;
  transition: border-color 0.2s ease;
  
  &:focus {
    border-color: var(--color-primary);
  }
  
  &::placeholder {
    color: var(--color-text-secondary);
  }
}

// Utility classes
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-left { text-align: left; }

.flex { display: flex; }
.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }

.w-full { width: 100%; }
.h-full { height: 100%; }

.m-0 { margin: 0; }
.p-0 { padding: 0; }

.hidden { display: none; }

// Media query mixins
@mixin sm {
  @media (min-width: var(--breakpoint-sm)) {
    @content;
  }
}

@mixin md {
  @media (min-width: var(--breakpoint-md)) {
    @content;
  }
}

@mixin lg {
  @media (min-width: var(--breakpoint-lg)) {
    @content;
  }
}

@mixin xl {
  @media (min-width: var(--breakpoint-xl)) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: var(--breakpoint-2xl)) {
    @content;
  }
}

// Responsive utility classes
.hidden-sm {
  @media (max-width: var(--breakpoint-sm)) {
    display: none !important;
  }
}

.hidden-md {
  @media (max-width: var(--breakpoint-md)) {
    display: none !important;
  }
}

.hidden-lg {
  @media (max-width: var(--breakpoint-lg)) {
    display: none !important;
  }
}

.show-sm {
  @media (min-width: var(--breakpoint-sm)) {
    display: none !important;
  }
}

.show-md {
  @media (min-width: var(--breakpoint-md)) {
    display: none !important;
  }
}

.show-lg {
  @media (min-width: var(--breakpoint-lg)) {
    display: none !important;
  }
}

// Container classes
.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
  
  @include sm {
    max-width: var(--breakpoint-sm);
  }
  
  @include md {
    max-width: var(--breakpoint-md);
  }
  
  @include lg {
    max-width: var(--breakpoint-lg);
  }
  
  @include xl {
    max-width: var(--breakpoint-xl);
  }
} 